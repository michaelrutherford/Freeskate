(defconstant MAX 99)
(defconstant MIN -99)
(defun addfn (f s)
  (cond ((or (not (integerp f)) (not (integerp s))) (error "Error"))
        ((or (> (+ f s) MAX) (< (+ f s) MIN)) (error "Error")))
  (+ f s))
(defun subfn (f s)
  (cond ((or (not (integerp f)) (not (integerp s))) (error "Error"))
        ((or (> (- f s) MAX) (< (- f s) MIN)) (error "Error")))
  (- f s))
(defun mltfn (f s)
  (cond ((or (not (integerp f)) (not (integerp s))) (error "Error"))
        ((or (> (* f s) MAX) (< (* f s) MIN)) (error "Error")))
  (* f s))
(defun dvnfn (f s)
  (cond ((or (not (integerp f)) (not (integerp s))) (error "Error"))
        ((or (> (/ f s) MAX) (< (/ f s) MIN)) (error "Error")))
  (/ f s))
(defun expfn (f s)
  (cond ((or (not (integerp f)) (not (integerp s))) (error "Error"))
        ((or (> (expt f s) MAX) (< (expt f s) MIN)) (error "Error")))
  (expt f s))
(defun sqrfn (f)
  (cond ((not (integerp f)) (error "Error"))
        ((or (> (sqrt f) MAX) (< (sqrt f) MIN)) (error "Error")))
  (sqrt f))
(defun fctfn (f)
  (if (>= 1 f) 1 (* f (fctfn (- f 1)))))
(defun prompt ()
  (write "Enter an equation."))
(prompt)
